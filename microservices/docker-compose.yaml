version: '3.4'

services:
  gateway:
    container_name: gateway
    build:
      context: "gateway"
      dockerfile: Dockerfile.dev
    ports:
      - 5000:5000
    networks:
      - dev-network
    volumes:
      - ./gateway/:/api
    depends_on: 
      - person
      - product

  person:
    container_name: person
    build:
      context: "person"
      dockerfile: Dockerfile.dev
    ports:
      - 1111
    networks:
      - dev-network
    volumes:
      - ./person/:/api

  product:
    container_name: product
    image: node:16.14.0
    working_dir: "/api"
    command: /bin/bash -c "npm i && npm run dev"
    ports:
      - 2222
    networks:
      - dev-network
    volumes: 
      - ./product/:/api

  account:
    container_name: account
    build:
      context: "account"
      dockerfile: Dockerfile.dev
    ports:
      - 3333
    networks:
      - dev-network
    volumes:
      - ./account/:/api

  postgres:
    restart: always
    image: postgres:latest
    environment:
      POSTGRES_DB: account
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
    volumes:
      - ./database/postgres/data:/var/lib/postgresql/data
      - ./database/postgres/scripts:/docker-entrypoint-initdb.d/
    ports:
      - "5432:5432"
    networks:
      - dev-network

  pgadmin:
    container_name: pgadmin4
    image: dpage/pgadmin4
    restart: always
    environment:
      PGADMIN_DEFAULT_EMAIL: admin@admin.com
      PGADMIN_DEFAULT_PASSWORD: admin
    volumes:
      - pgdata:/var/lib/pgadmin
    ports:
      - "5050:80"
    networks:
      - dev-network



volumes:
  pgdata:
    driver: local

networks:
  dev-network:
    driver: bridge